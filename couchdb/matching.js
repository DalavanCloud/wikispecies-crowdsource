{"_id":"_design/matching","_rev":"15-852be59e57aed978ef4e17cace127c29","views":{"hash":{"map":"//----------------------------------------------------------------------------------------\n// START COUCHDB VIEW\n//----------------------------------------------------------------------------------------\n\n//----------------------------------------------------------------------------------------\nfunction do_csl(index, work) {\n    var hash = [];\n    \n    // year\n    if (work.issued) {\n      hash.push(parseInt(work.issued['date-parts'][0][0]));\n    }\n    \n    // volume\n    if (work.volume) {\n      hash.push(parseInt(work.volume));\n    }\n        \n    // starting page\n    if (work['page-first']) {\n      hash.push(parseInt(work['page-first']));\n    } else {\n      var m = work.page.match(/(\\d+)(-(\\d+))?/);\n      if (m) {\n        hash.push(parseInt(m[1]));\n      }\n    }\n    \n    //------ build string representation of work for testing matches\n    \n    var terms = [];\n    \n    //terms.push(id);\n    \n\t// author\n\tif (work.author) {\n\t\tfor (var i in work.author) {\n     \t\tvar name = [];\n    \t\t\n    \t\tif (work.author[i].given) {\n    \t\t\tname.push(work.author[i].given);\n    \t\t}\n     \t\tif (work.author[i].family) {\n    \t\t\tname.push(work.author[i].family);\n    \t\t}\n\n\t\t\t// just use literal if we have it\n     \t\tif (work.author[i].literal) {\n    \t\t\tname = [work.author[i].literal];\n    \t\t}\n    \t\t\n    \t\tif (name.length > 0) {\n    \t\t\tterms.push(name);\n    \t\t}\n\n\t\t}\n\t}    \n      \n\tif (work.title) {\n\t\tvar container = '';\n\t\tif (Array.isArray(work.title)) {\n\t\t\tterms.push(work.title[0]);          \n\t\t} else {\n\t\t\tterms.push(work.title); \t\t\n\t\t}\n\t}     \n\t\n\t// date\n\tif (work.issued) {\n\t\tif (work.issued['date-parts']) {\n\t\t\tterms.push(work.issued['date-parts'][0][0]);\n\t\t}\n\t} \t \n    \n\tif (work['container-title']) {\n\t\tif (Array.isArray(work['container-title'])) {\n\t\t\tterms.push(work['container-title'][0]);          \n\t\t} else {\n\t\t\tterms.push(work['container-title']); \t\t\n\t\t}\n\t}   \n    \n\t// volume\n\tif (work.volume) {\n\t\tterms.push(work.volume);\n\t} \n\n\t// issue\n\tif (work.issue) {\n\t\tterms.push(work.issue);\n\t} \n\n\t// page\n\tif (work.page) {\n\t\tterms.push(work.page);\n\t} \n    \n    if (hash.length == 3) {\n      emit(hash, [index, terms.join(' ')]);\n    }    \n  \n  \n}\n\nfunction (doc) {\n  if (doc.references) {\n    for (var i in doc.references) {\n       if (doc.references[i].csl) {\n         if (doc.references[i].csl.status == 'ok') {\t\t   \n           \n           var index = parseInt(i);\n           /*\n          var id = doc._id;\n         \tif (!id.match(/^Template/)) {\n        \t\tid = doc._id + '#' + (parseInt(i) + 1);\n          \t}  \n          \t*/         \n           do_csl(index, doc.references[i].csl);\n         }\n      }\n    }\n  }\n}\n// END COUCHDB VIEW"},"doi":{"map":"//----------------------------------------------------------------------------------------\n// START COUCHDB VIEW\n//----------------------------------------------------------------------------------------\n\n//----------------------------------------------------------------------------------------\nfunction do_csl(index, work) {\n  if (work.DOI) {\n    \n   \n    //------ build string representation of work for testing matches\n    \n    var terms = [];\n    \n    //terms.push(id);\n    \n\t// author\n\tif (work.author) {\n\t\tfor (var i in work.author) {\n     \t\tvar name = [];\n    \t\t\n    \t\tif (work.author[i].given) {\n    \t\t\tname.push(work.author[i].given);\n    \t\t}\n     \t\tif (work.author[i].family) {\n    \t\t\tname.push(work.author[i].family);\n    \t\t}\n\n\t\t\t// just use literal if we have it\n     \t\tif (work.author[i].literal) {\n    \t\t\tname = [work.author[i].literal];\n    \t\t}\n    \t\t\n    \t\tif (name.length > 0) {\n    \t\t\tterms.push(name);\n    \t\t}\n\n\t\t}\n\t}    \n      \n\tif (work.title) {\n\t\tvar container = '';\n\t\tif (Array.isArray(work.title)) {\n\t\t\tterms.push(work.title[0]);          \n\t\t} else {\n\t\t\tterms.push(work.title); \t\t\n\t\t}\n\t}     \n\t\n\t// date\n\tif (work.issued) {\n\t\tif (work.issued['date-parts']) {\n\t\t\tterms.push(work.issued['date-parts'][0][0]);\n\t\t}\n\t} \t \n    \n\tif (work['container-title']) {\n\t\tif (Array.isArray(work['container-title'])) {\n\t\t\tterms.push(work['container-title'][0]);          \n\t\t} else {\n\t\t\tterms.push(work['container-title']); \t\t\n\t\t}\n\t}   \n    \n\t// volume\n\tif (work.volume) {\n\t\tterms.push(work.volume);\n\t} \n\n\t// issue\n\tif (work.issue) {\n\t\tterms.push(work.issue);\n\t} \n\n\t// page\n\tif (work.page) {\n\t\tterms.push(work.page);\n\t} \n    \n    \n    emit(work.DOI.toLowerCase(), [index, terms.join(' ')]);   \n  \n  }\n}\n\nfunction (doc) {\n  if (doc.references) {\n    for (var i in doc.references) {\n       if (doc.references[i].csl) {\n         if (doc.references[i].csl.status == 'ok') {\t\t   \n           \n          var index = parseInt(i);\n          /*\n          var id = doc._id;\n         \tif (!id.match(/^Template/)) {\n        \t\tid = doc._id + '#' + (parseInt(i) + 1);\n          \t} \n          */          \n           do_csl(index, doc.references[i].csl);\n         }\n      }\n    }\n  }\n}\n// END COUCHDB VIEW"},"doc_to_hash":{"map":"//----------------------------------------------------------------------------------------\n// START COUCHDB VIEW\n//----------------------------------------------------------------------------------------\n\n//----------------------------------------------------------------------------------------\nfunction do_csl(id, work) {\n    var hash = [];\n    \n    // year\n    if (work.issued) {\n      hash.push(parseInt(work.issued['date-parts'][0][0]));\n    }\n    \n    // volume\n    if (work.volume) {\n      hash.push(parseInt(work.volume));\n    }\n        \n    // starting page\n    if (work['page-first']) {\n      hash.push(parseInt(work['page-first']));\n    } else {\n      var m = work.page.match(/(\\d+)(-(\\d+))?/);\n      if (m) {\n        hash.push(parseInt(m[1]));\n      }\n    }\n    \n\n    \n    if (hash.length == 3) {\n      emit(id, hash);\n    }    \n  \n  \n}\n\nfunction (doc) {\n  if (doc.references) {\n    for (var i in doc.references) {\n       if (doc.references[i].csl) {\n         if (doc.references[i].csl.status == 'ok') {\t\t   \n           \n          var id = doc._id;\n         \tif (!id.match(/^Template/)) {\n        \t\tid = doc._id + '#' + (parseInt(i) + 1);\n          \t}           \n           do_csl(id, doc.references[i].csl);\n         }\n      }\n    }\n  }\n}\n// END COUCHDB VIEW"},"doc_to_doi":{"map":"//----------------------------------------------------------------------------------------\n// START COUCHDB VIEW\n//----------------------------------------------------------------------------------------\n\n//----------------------------------------------------------------------------------------\nfunction do_csl(id, work) {\n  if (work.DOI) {\n    emit(id, work.DOI.toLowerCase());     \n  }\n}\n\nfunction (doc) {\n  if (doc.references) {\n    for (var i in doc.references) {\n       if (doc.references[i].csl) {\n         if (doc.references[i].csl.status == 'ok') {\t\t   \n           \n          var id = doc._id;\n         \tif (!id.match(/^Template/)) {\n        \t\tid = doc._id + '#' + (parseInt(i) + 1);\n          \t}           \n           do_csl(id, doc.references[i].csl);\n         }\n      }\n    }\n  }\n}\n// END COUCHDB VIEW"}},"language":"javascript"}
